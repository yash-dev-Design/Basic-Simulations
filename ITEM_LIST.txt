#include <stdio.h>
#include <string.h>

#define MAX_ITEMS 20

// Structure to store item details
typedef struct 
{
    char name[50];
    float price;
} Item;

// Function prototypes
void displayCategories();
void displayItems(const char category[]);

int main() 
{
    int choice;

    // Display categories
    displayCategories();

    printf("Enter your choice (1-17): ");
    scanf("%d", &choice);

    switch (choice) 
    {
        case 1: displayItems("Fruits"); break;
        case 2: displayItems("Vegetables"); break;
        case 3: displayItems("Groceries"); break;
        case 4: displayItems("Milk"); break;
        case 5: displayItems("Dry Fruits"); break;
        case 6: displayItems("e-Devices"); break;
        case 7: displayItems("Home Appliances"); break;
        case 8: displayItems("Fashion"); break;
        case 9: displayItems("Health"); break;
        case 10: displayItems("Furniture"); break;
        case 11: displayItems("Beauty Products"); break;
        case 12: displayItems("Gadgets"); break;
        case 13: displayItems("2-Wheelers"); break;
        case 14: displayItems("Toys"); break;
        case 15: displayItems("Sports"); break;
        case 16: displayItems("Auto Mobiles"); break;
        case 17: displayItems("More"); break;
        default: printf("Invalid choice. Exiting.\n");
    }

    return 0;
}

void displayCategories() 
{
    printf("1. Fruits\n2. Vegetables\n3. Groceries\n4. Milk\n");
    printf("5. Dry Fruits\n6. e-Devices\n7. Home Appliances\n");
    printf("8. Fashion\n9. Health\n10. Furniture\n");
    printf("11. Beauty Products\n12. Gadgets\n");
    printf("13. 2-Wheelers\n14. Toys\n15. Sports\n");
    printf("16. Auto Mobiles\n17. More....\n\n");
}

void displayItems(const char category[]) 
{
    // Define items based on categories
    Item items[MAX_ITEMS];

    if (strcmp(category, "Fruits") == 0) 
    {
        Item fruits[] = 
        {
            {"Apple", 2.5}, {"Banana", 1.0}, {"Orange", 1.2}, {"Pineapple", 3.0},
            {"Mango", 1.8}, {"Grapes", 2.0}, {"Watermelon", 4.5}, {"Strawberry", 3.5},
            {"Peach", 2.2}, {"Pear", 1.6}, {"Plum", 1.8}, {"Pomegranate", 2.8},
            {"Kiwi", 3.0}, {"Papaya", 2.2}, {"Lychee", 4.0}, {"Blueberry", 5.0},
            {"Avocado", 3.5}, {"Cherries", 6.0}, {"Guava", 1.5}, {"Jackfruit", 2.5}
        };
        memcpy(items, fruits, sizeof(fruits));
    } else if (strcmp(category, "Vegetables") == 0) 
    {
        Item vegetables[] = 
        {
            {"Tomato", 1.2}, {"Onion", 1.5}, {"Carrot", 1.8}, {"Potato", 1.0},
            {"Cucumber", 1.0}, {"Broccoli", 2.5}, {"Spinach", 1.8}, {"Cauliflower", 2.2},
            {"Capsicum", 2.0}, {"Pumpkin", 2.5}, {"Beetroot", 1.6}, {"Lettuce", 3.0},
            {"Ginger", 2.0}, {"Garlic", 2.2}, {"Chili", 2.5}, {"Cabbage", 1.5},
            {"Peas", 1.8}, {"Brussels Sprouts", 3.0}, {"Radish", 1.2}, {"Asparagus", 4.0}
        };
        memcpy(items, vegetables, sizeof(vegetables));
    } else if (strcmp(category, "Groceries") == 0) 
    {
        Item groceries[] = 
        {
            {"Rice", 10.5}, {"Wheat Flour", 5.0}, {"Sugar", 3.5}, {"Salt", 1.0},
            {"Tea", 2.5}, {"Coffee", 4.0}, {"Spices", 3.0}, {"Lentils", 2.2},
            {"Cereals", 4.5}, {"Pasta", 2.5}, {"Oats", 3.0}, {"Cooking Oil", 7.0},
            {"Ghee", 6.5}, {"Honey", 5.5}, {"Milk Powder", 8.0}, {"Biscuits", 1.5},
            {"Cookies", 2.0}, {"Noodles", 1.0}, {"Chocolates", 3.0}, {"Condensed Milk", 4.2}
        };
        memcpy(items, groceries, sizeof(groceries));
    } 
    else if (strcmp(category, "Milk") == 0) 
    {
        Item milk[] = 
        {
            {"Full Cream Milk", 1.5}, {"Skimmed Milk", 1.3}, {"Soy Milk", 2.0}, {"Almond Milk", 3.0},
            {"Buffalo Milk", 2.5}, {"Low-fat Milk", 1.2}, {"Buttermilk", 1.0}, {"Flavored Milk", 2.8},
            {"Chocolate Milk", 3.2}, {"Milk Powder", 3.5}, {"Coconut Milk", 2.0}, {"Evaporated Milk", 3.0},
            {"Condensed Milk", 4.5}, {"Goat Milk", 3.0}, {"Organic Milk", 4.0}, {"Canned Milk", 2.8},
            {"Whole Milk", 1.5}, {"Fresh Milk", 1.3}, {"Vanilla Milk", 2.0}, {"Milk Shake", 2.5}
        };
        memcpy(items, milk, sizeof(milk));
    } 
    else 
    {
        // If category is not found, show a default message
        printf("\nNo items available for %s.\n", category);
        return;
    }

    printf("\nItems in %s:\n", category);
    printf("Name                Price\n");
    printf("-------------------------\n");

    for (int i = 0; i < MAX_ITEMS; i++) 
    {
        printf("%-20s %.2f\n", items[i].name, items[i].price);
    }
}
